@model Front.Models.StandardModel<DAL.DemandeAccesEngin>
@using PagedList
@using PagedList.Mvc
 
@using Shared;
@{
    /**/
    ViewBag.Title = "Mes contrôles";
    var isController = HttpContext.Current.User.IsInRole(ConstsAccesEngin.ROLE_CONTROLEUR);
    var isChefProject = HttpContext.Current.User.IsInRole(ConstsAccesEngin.ROLE_CHEFPROJET);
}


<div class="row">
    <div class="col-sm-12">
        <div class="card-box">
            <div class="row">
                <div id="search" class="col-md-12  pull-left">
                    @using (Html.BeginForm())
                    {
                        <div class="row">

                            <div class="col-md-4">

                                <div class="form-group">
                                    <div class="col-md-12">
                                        <label class="control-label">Recherche:</label>
                                        @Html.Editor("Content", new { htmlAttributes = new { @class = "form-control", placeholder = ".." } })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-md-12">
                                        <label class="control-label">Status:</label>
                                        @Html.DropDownList("StatutDemandeId", null, "-- Status --", htmlAttributes: new { @class = "form-control" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-12">
                                        <label class="control-label">Type de check Liste:</label>
                                        @Html.DropDownList("TypeCheckListId", null, "-- Type --", htmlAttributes: new { @class = "form-control" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <div class="col-md-12">
                                        <label class="control-label">Autorisé:</label>
                                        <select class="form-control" name="Autorise">
                                            <option value="">-- Autorisé --</option>
                                            <option value="true">Autorisée</option>
                                            <option value="false">Non autorisée</option>
                                        </select>
                                    </div>
                                </div>
                                @if (!isController)
                                {
                                    <div class="form-group">
                                        <div class="col-md-12">
                                            <label class="control-label">Contrôlé:</label>
                                            <select class="form-control" name="Controle">
                                                <option value="">-- Contrôlé --</option>
                                                <option value="true">Contrôléé</option>
                                                <option value="false">Non Contrôlée</option>
                                            </select>
                                        </div>
                                    </div>
                                }
                                <div class="form-group">
                                    <div class="col-md-12">
                                        <label class="control-label">Date de Plannification</label>

                                        <input type="text" class="form-control datepicker-autoclose" id="DatePlannificationId" name="DatePlannification" autocomplete="off" placeholder="yyyy/mm/dd">
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <div class="col-md-12">
                                        <br />
                                        <label class="control-label">&nbsp;&nbsp;</label>
                                        <input class="btn btn-success btn-search" type="submit" value="Filtrer" />
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
            <div class="row">
                <div class="col-md-10 text-left">

                </div>
                <div class="col-md-2 text-right">
                    @{
                        if (!isController)
                        {
                            <a href="@Url.Action("Create")" class="btn btn-primary waves-effect w-md waves-light m-b-5">
                                <span class="glyphicon glyphicon-plus"></span>&nbsp;Nouveau
                            </a>
                        }
                    }

                </div>
            </div>

            <table class="@UIHelper.CrudTableCss">
                <tr>
                    @if (isChefProject)
                    {
                        <th>
                        </th>
                    }
                    <th>
                        @Html.DisplayNameFor(model => model.resultList.FirstOrDefault().Id)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.resultList.FirstOrDefault().REF_TypeCheckList.Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.resultList.FirstOrDefault().Observation)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.resultList.FirstOrDefault().DatePlannification)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.resultList.FirstOrDefault().CreatedBy)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.resultList.FirstOrDefault().CreatedOn)
                    </th>
                    <th>Contrôler</th>
                    <th>Autorisé</th>
                    <th>Pièce jointe</th>
                    <th>Status</th>
                    <th></th>
                </tr>
                @{
                    foreach (var item in Model.resultList)
                    {
                        var isControled = Model.resultList.Any(x => x.ResultatControleEntete.Any(r => r.DemandeAccesEnginId == item.Id));

                        <tr class="line">
                            @{
                                if (isChefProject)
                                {
                                    <td>
                                        @if (item?.StatutDemandeId == 2) //2 => refuser
                                        {
                                            <a href="@Url.Action("Edit", "DemandeAccesEngins", new { id = item.Id.ToString() })" class="">
                                                <span class="fa fa-edit"></span> Edit
                                            </a>
                                        }
                                    </td>
                                }
                            }
                            <td>
                                @Html.DisplayFor(modelItem => item.Id)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.REF_TypeCheckList.Name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Observation)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.DatePlannification)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.AspNetUsers.Email)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.CreatedOn)
                            </td>
                            <td>
                                @if (isControled)
                                {
                                    <span class="label  label-info">Contrôlée</span>
                                }
                                else
                                {
                                    <span class="label  label-warning">Non contrôlée</span>
                                }
                            </td>
                            <td>
                                @if (isControled)
                                {
                                    if (item.IsAutorise)
                                    {
                                        <span class="label  label-success">Autorisée</span>
                                    }
                                    else
                                    {
                                        <span class="label  label-danger">Non autorisée</span>
                                    }
                                }

                            </td>
                            <td>
                                @if (item.AppFileId.HasValue)
                                {
                                    @Html.ActionLink("Télécharger le fichier", "DownloadAsync", "Home", new { id = item.AppFileId }, null)
                                }
                                else
                                {

                                }
                            </td>
                            <td>
                                @{
                                    if (!item.StatutDemandeId.HasValue)
                                    {
                                        if (isController)
                                        {
                                            <button onclick="validerDemande(@(item.Id))" data-target="#modalReporterAction" data-toggle="modal" class="btn btn-primary waves-effect w-lg waves-light m-b-5">Valider</button>
                                        }

                                    }
                                    else
                                    {

                                        <span class="badge" style="background-color:@(item.REF_StatutDemandes.Color)">@item.REF_StatutDemandes.Name</span>

                                        if (item.ReponseDemande.ToList().Count() > 0)
                                        {
                                            foreach (var rp in item.ReponseDemande.ToList())
                                            {
                                                <text>
                                                    <div>
                                                        <span class="fa  fa-toggle-down" onclick="showDetails(this)"></span>
                                                        <div class="hidden">
                                                            <small> @Html.Raw(string.Join(" <br/> ", rp.Motif))</small>
                                                        </div>
                                                    </div>

                                                </text>
                                            }

                                        }
                                    }

                                }

                            </td>
                            <td class="AdminListButtons">
                                @{
                                    if (!isControled)
                                    {
                                        
                                            <a href="@Url.Action("ResultatsInfoGeneral", "Home", new { id = item.Id.ToString() })" class="btn btn-custom  waves-effect w-lg waves-light m-b-5">
                                                <span class="fa fa-list-alt"></span>&nbsp;Voir Détail
                                            </a>
                                    }
                                    if (item.StatutDemandeId != 2 && item.StatutDemandeId.HasValue) //2 => refuser
                                    {
                                        @*@Html.Partial("_AdminListButtons", item.Id)*@
                                        if (isControled)
                                        {
                                            /**/
                                            <a href="@Url.Action("Resultats", "Home", new { id = item.Id.ToString() })" class="btn btn-info waves-effect w-lg waves-light m-b-5">
                                                <span class="fa fa-list-alt"></span>&nbsp;Voir Résultats
                                            </a>
                                        }
                                        else
                                        {
                                            if (Request.IsAuthenticated && isController)
                                            {
                                                <a href="@Url.Action("NewControleResultatCheckList", "Home", new { id = item.Id.ToString() })" class="btn btn-success waves-effect w-lg waves-light m-b-5">
                                                    <span class="fa fa-check"></span>&nbsp;Contrôler
                                                </a>
                                            }

                                        }
                                    }
                                }

                            </td>

                        </tr>
                    }
                }

            </table>
            <br />

            Page @(Model.resultList.PageCount < Model.resultList.PageNumber ? 0 : Model.resultList.PageNumber) of @Model.resultList.PageCount
            @Html.PagedListPager((IPagedList)Model.resultList, page => Url.Action("Index", new { page, Model.content, Model.columnName }))
        </div>
    </div>
</div>


<div id="modalReporterAction" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">

    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title mt-0" id="myModalLabel">Valider la demande</h4>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
            </div>
            <div class="modal-body">
                <div class="row ">

                    <div class="col-md-12 form-inline">
                        <br />
                        <div class="radio radio-success form-inline">
                            <input id="radio1" type="radio" value="1" name="statutDemande" />
                            <label for="radio1">
                                Accepter
                            </label>
                        </div>
                        <div class="radio radio-danger form-inline">
                            <input id="radio2" type="radio" value="2" name="statutDemande" />
                            <label for="radio2">
                                Refuser
                            </label>
                        </div>
                    </div>
                    <div id="divMotif" class="col-md-12 hidden">
                        Motif: <br />
                        <textarea class="form-control " id="motif-report"></textarea>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-dismiss="modal">Annuler</button>
                <button type="button" id="btnMotifId" class="btn btn-danger">Accepter</button>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <link href="~/Content/admin-crud.css" rel="stylesheet" />
    <script src="~/Scripts/admin.crud.js"></script>
    <script>
        var DemandeAccesEnginId;
        var statut;
        $(document).ready(function () {
            //jQuery('.datepicker-autoclose').datepicker({
            //    format: "yyyy/mm/dd",
            //    autoclose: true,
            //    todayHighlight: true,
            //});
            $('input[name=statutDemande]', this).change(function () {
                var radioValue = $("input[name='statutDemande']:checked").val();
                if (radioValue == 1) {
                    $("#divMotif").addClass("hidden");
                    $("#motif-report").val("");
                    statut = "validée";
                    $("#btnMotifId").html('Accepter');
                } else {
                    $("#divMotif").removeClass("hidden");
                    statut = "refusée";
                    $("#btnMotifId").html('Refuser');
                }
            });
            $("#btn-reporter-action").click(function () {

                var r = confirm("Êtes-vous sûr de vouloir valider cette demande");
                if (r == false) {
                    return;
                }


                var jsonObject = {
                    DemandeAccesEnginId: DemandeAccesEnginId,
                    Motif: $("#motif-report").val(),
                    StatutDemandeId: $("input[name='statutDemande']:checked").val()
                };
                debugger;
                $.ajax({
                    url: "/AccesEnginapi/validerDemande",
                    method: 'POST',
                    data: jsonObject
                }).done(function () {
                    //  swal("la demande "+statut+" avec succès!");


                    swal(
                        {
                            title: 'la demande a été ' + statut,
                            type: 'success',
                            confirmButtonColor: '#4fa7f3'
                        }
                    ).then(function () {
                        location.reload(true);
                        updateUI();
                    })

                }).fail(function () {
                    swal("Erreur lors du valider ce demande!");
                })
            });

        });
        function validerDemande(demandeAccesEnginId) {
            DemandeAccesEnginId = demandeAccesEnginId;
        }
        function showDetails(el) {
            var ico = $(el);
            var nextDiv = $(el).next("div");
            if (nextDiv.hasClass("hidden")) {
                ico.prop("class", "fa  fa-toggle-up ");
                nextDiv.addClass("hidden");

            } else {
                ico.prop("class", "fa  fa-toggle-down");
                nextDiv.removeClass("hidden");
            }
            $(el).next("div").toggleClass("hidden");
        }

    </script>
}


